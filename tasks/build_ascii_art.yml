---
# Build dynamicaly Logo and environment ascii art

- command: "ls -lra ."
  register: dir_out

- debug: var={{item}}
  with_items: dir_out.stdout_lines

- name: Set some internal role vars
  set_fact:
    mylogofile:   "logo"
#    mylogo:       "{{ lookup('file', mylogofile ) }}"
    myenvfile:    "{{motd_ascii_art_with_environment}}"
#    myenv:        "{{ lookup('file', myenvfile ) }}"
#    banner:       "{{ mylogo + myenv }}"
    mybannerfile: "files/banner"
 
- stat:
    path: './files/lib'
  register: out

- debug:
    var: '{{ out }}'
  when: out.path is defined

- find:
         paths:  './'
         file_type: any
         recurse: yes
         patterns: '{{ myenvfile }}'
  register: myitems
  #delegate_to: 127.0.0.1
  
- name: 'Debug some content vars'
  debug: 
    var: '{{ myitems }}'
  when: myitems is defined
  #delegate_to: 127.0.0.1
 
#- name: 'list log files'
#  debug: var="{{ files_matched_subdirectory.path }}"
#  with_items: "{{ files_matched_subdirectory.files }}"
  #delegate_to: 127.0.0.1

#- name: Write banner to text file
#  copy: 
#    content: "{{ banner }}"
#    dest: "{{ mybannerfile }}"
#  when: banner is defined and mybanner is defined

#- name: 'Debug {{ banner }}'
#  debug:
#    msg: "{{ lookup('file', mybannerfile, errors='strict') }}"
